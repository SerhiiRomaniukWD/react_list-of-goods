{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","options","visibleGoods","isReversed","sortType","console","log","sort","prevGood","currentGood","ALPHABET","LENGTH","NONE","localeCompare","length","reverse","App","state","this","visibleReset","className","type","classNames","onClick","setState","map","good","index","toString","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EACAC,GAGA,IAAMC,EAAY,YAAOF,GACjBG,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SAwBpB,OApBAC,QAAQC,IAAIF,EAAUD,GAEtBD,EAAaK,MAAK,SAACC,EAAUC,GAC3B,IACEC,EAGEb,EAHFa,SACAC,EAEEd,EAFFc,OAEEd,EADFe,KAGF,OAAQR,GACN,KAAKM,EACH,OAAOF,EAASK,cAAcJ,GAChC,KAAKE,EACH,OAAOH,EAASM,OAASL,EAAYK,OAGvC,QAAS,OAAO,MAIbX,EACHD,EAAaa,UACbb,G,SA5CDL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAoDE,IAAMmB,EAAb,4MACEC,MAAQ,CACNd,YAAY,EACZC,SAAUP,EAASe,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCM,KAAKD,MAA9Bd,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAElBO,EAGEd,EAHFc,OACAD,EAEEb,EAFFa,SACAE,EACEf,EADFe,KAEIO,EAAgBhB,GAAcC,IAAaQ,EAEjD,OACE,sBAAKQ,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYlB,IAAaM,IAE3Ba,QAAS,kBAAO,EAAKC,SAAS,CAAEpB,SAAUM,KAL5C,iCAUA,wBACEW,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYlB,IAAaO,IAE3BY,QAAS,kBAAO,EAAKC,SAAS,CAAEpB,SAAUO,KAL5C,4BAUA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAanB,IAEfoB,QAAS,kBACPpB,EACI,EAAKqB,SAAS,CAAErB,YAAY,IAC5B,EAAKqB,SAAS,CAAErB,YAAY,KARpC,qBAcCgB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,kBAAO,EAAKC,SAAS,CAC5BrB,YAAY,EACZC,SAAUQ,KALd,sBAaJ,6BACE,6BACGb,EACCD,EACAoB,KAAKD,OACLQ,KAAI,SAACC,EAAMC,GAAP,OACJ,oBAAkC,UAAQ,OAA1C,SAAkDD,GAAzCA,EAAOC,EAAMC,0BAxEpC,GAAyBC,aCnEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.95785566.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  options: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n  const { isReversed, sortType } = options;\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((prevGood, currentGood) => {\n    const {\n      ALPHABET,\n      LENGTH,\n      NONE,\n    } = SortType;\n\n    switch (sortType) {\n      case ALPHABET:\n        return prevGood.localeCompare(currentGood);\n      case LENGTH:\n        return prevGood.length - currentGood.length;\n      case NONE:\n        return 0;\n      default: return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const {\n      LENGTH,\n      ALPHABET,\n      NONE,\n    } = SortType;\n    const visibleReset = (isReversed || sortType !== NONE);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== ALPHABET,\n            })}\n            onClick={() => (this.setState({ sortType: ALPHABET }))}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== LENGTH,\n            })}\n            onClick={() => (this.setState({ sortType: LENGTH }))}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={() => (\n              isReversed\n                ? this.setState({ isReversed: false })\n                : this.setState({ isReversed: true })\n            )}\n          >\n            Reverse\n          </button>\n\n          {visibleReset && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => (this.setState({\n                isReversed: false,\n                sortType: NONE,\n              }))}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              this.state,\n            ).map((good, index) => (\n              <li key={good + index.toString()} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}