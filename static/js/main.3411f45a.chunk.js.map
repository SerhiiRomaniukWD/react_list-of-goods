{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","options","visibleGoods","isReversed","sortType","console","log","sort","prevGood","currentGood","ALPHABET","LENGTH","localeCompare","length","reverse","App","state","NONE","this","isSorted","setSortTypeState","inputType","setState","className","type","classNames","onClick","map","good","index","String","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAeK,SAASC,EACdC,EACAC,GAGA,IAAMC,EAAY,YAAOF,GACjBG,EAAyBF,EAAzBE,WAAYC,EAAaH,EAAbG,SAsBpB,OAlBAC,QAAQC,IAAIF,EAAUD,GAEtBD,EAAaK,MAAK,SAACC,EAAUC,GAC3B,IACEC,EAEEb,EAFFa,SACAC,EACEd,EADFc,OAGF,OAAQP,GACN,KAAKM,EACH,OAAOF,EAASI,cAAcH,GAChC,KAAKE,EACH,OAAOH,EAASK,OAASJ,EAAYI,OACvC,QACE,OAAO,MAINV,EACHD,EAAaY,UACbZ,G,SA1CDL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAkDE,IAAMkB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZC,SAAUP,EAASoB,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKF,MAA9Bb,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAElBO,EAGEd,EAHFc,OACAD,EAEEb,EAFFa,SACAO,EACEpB,EADFoB,KAEIE,EAAWhB,GAAeC,IAAaa,EACvCG,EAAmB,SAACC,GAAD,OACvB,EAAKC,SAAS,CAAElB,SAAUiB,KAc5B,OACE,sBAAKE,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYrB,IAAaM,IAE3BgB,QAAS,kBAAON,EAAiBV,IALnC,iCAUA,wBACEc,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYrB,IAAaO,IAE3Be,QAAS,kBAAON,EAAiBT,IALnC,4BAUA,wBACEa,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAatB,IAEfuB,QAlCsB,kBAC5B,EAAKJ,UAAS,SAACN,GAAD,MACZ,CAAEb,YAAaa,EAAMb,gBA2BnB,qBAUCgB,GACC,wBACEK,KAAK,SACLD,UAAU,4BACVG,QAjDc,kBACtB,EAAKJ,SAAS,CACZnB,YAAY,EACZC,SAAUa,KA2CN,sBAUJ,6BACE,6BACGlB,EACCD,EACAoB,KAAKF,OACLW,KAAI,SAACC,EAAMC,GAAP,OACJ,oBAA+B,UAAQ,OAAvC,SAA+CD,GAAtCE,OAAOF,EAAOC,kBA/ErC,GAAyBE,aCjEzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3411f45a.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  options: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n  const { isReversed, sortType } = options;\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  visibleGoods.sort((prevGood, currentGood) => {\n    const {\n      ALPHABET,\n      LENGTH,\n    } = SortType;\n\n    switch (sortType) {\n      case ALPHABET:\n        return prevGood.localeCompare(currentGood);\n      case LENGTH:\n        return prevGood.length - currentGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const {\n      LENGTH,\n      ALPHABET,\n      NONE,\n    } = SortType;\n    const isSorted = isReversed || (sortType !== NONE);\n    const setSortTypeState = (inputType: SortType) => (\n      this.setState({ sortType: inputType })\n    );\n    const setDefaultState = () => (\n      this.setState({\n        isReversed: false,\n        sortType: NONE,\n      })\n    );\n    const switchIsReversedState = () => (\n      this.setState((state) => (\n        { isReversed: !state.isReversed }\n      ))\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== ALPHABET,\n            })}\n            onClick={() => (setSortTypeState(ALPHABET))}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== LENGTH,\n            })}\n            onClick={() => (setSortTypeState(LENGTH))}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={switchIsReversedState}\n          >\n            Reverse\n          </button>\n\n          {isSorted && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={setDefaultState}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(\n              goodsFromServer,\n              this.state,\n            ).map((good, index) => (\n              <li key={String(good + index)} data-cy=\"Good\">{good}</li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}